#ifndef SYNC_ANALYSIS_INTEGRATION_SHARED_EVENTS_H_
#define SYNC_ANALYSIS_INTEGRATION_SHARED_EVENTS_H_

#include <sync_analysis.h>

#ifdef __cplusplus
extern "C" {
#endif

enum {
  SA_MUTEX = 1u << 15,
  SA_REC_MUTEX = 1u << 16,
  SA_RWLOCK = 1u << 17,

  SA_TRY_WR_LOCK = 1u << 18,
  SA_BEFORE_WR_LOCK = 1u << 19,
  SA_AFTER_WR_LOCK = 1u << 20,
  SA_WR_UNLOCK = 1u << 21,
  SA_TRY_RD_LOCK = 1u << 22,
  SA_BEFORE_RD_LOCK = 1u << 23,
  SA_AFTER_RD_LOCK = 1u << 24,
  SA_RD_UNLOCK = 1u << 25,
  SA_JOIN = 1u << 26,
  SA_DETACH = 1u << 27,
};

enum {
  SA_EV_THREAD_ON_JOIN = SA_EV_THREAD | SA_JOIN,
  SA_EV_THREAD_ON_DETACH = SA_EV_THREAD | SA_DETACH,

  SA_EV_MUTEX_ON_CREATE = SA_MUTEX | SA_EV_CREATE,
  SA_EV_MUTEX_ON_TRY_LOCK = SA_MUTEX | SA_TRY_WR_LOCK,
  SA_EV_MUTEX_BEFORE_LOCK = SA_MUTEX | SA_BEFORE_WR_LOCK,
  SA_EV_MUTEX_AFTER_LOCK = SA_MUTEX | SA_AFTER_WR_LOCK,
  SA_EV_MUTEX_ON_UNLOCK = SA_MUTEX | SA_WR_UNLOCK,
  SA_EV_MUTEX_ON_DESTROY = SA_MUTEX | SA_EV_DESTROY,

  SA_EV_REC_MUTEX_ON_CREATE = SA_REC_MUTEX | SA_EV_CREATE,
  SA_EV_REC_MUTEX_ON_TRY_LOCK = SA_REC_MUTEX | SA_TRY_WR_LOCK,
  SA_EV_REC_MUTEX_BEFORE_LOCK = SA_REC_MUTEX | SA_BEFORE_WR_LOCK,
  SA_EV_REC_MUTEX_AFTER_LOCK = SA_REC_MUTEX | SA_AFTER_WR_LOCK,
  SA_EV_REC_MUTEX_ON_UNLOCK = SA_REC_MUTEX | SA_WR_UNLOCK,
  SA_EV_REC_MUTEX_ON_DESTROY = SA_REC_MUTEX | SA_EV_DESTROY,

  SA_EV_RWLOCK_ON_CREATE = SA_RWLOCK | SA_EV_CREATE,
  SA_EV_RWLOCK_ON_TRY_RD_LOCK = SA_RWLOCK | SA_TRY_RD_LOCK,
  SA_EV_RWLOCK_BEFORE_RD_LOCK = SA_RWLOCK | SA_BEFORE_RD_LOCK,
  SA_EV_RWLOCK_AFTER_RD_LOCK = SA_RWLOCK | SA_AFTER_RD_LOCK,
  SA_EV_RWLOCK_ON_RD_UNLOCK = SA_RWLOCK | SA_RD_UNLOCK,
  SA_EV_RWLOCK_ON_TRY_WR_LOCK = SA_RWLOCK | SA_TRY_WR_LOCK,
  SA_EV_RWLOCK_BEFORE_WR_LOCK = SA_RWLOCK | SA_BEFORE_WR_LOCK,
  SA_EV_RWLOCK_AFTER_WR_LOCK = SA_RWLOCK | SA_AFTER_WR_LOCK,
  SA_EV_RWLOCK_ON_WR_UNLOCK = SA_RWLOCK | SA_WR_UNLOCK,
  SA_EV_RWLOCK_ON_DESTROY = SA_RWLOCK | SA_EV_DESTROY,
};

#ifdef __cplusplus
}
#endif

#endif
